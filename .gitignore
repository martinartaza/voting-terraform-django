# Local .terraform directories
.terraform/

# .tfstate files (CRITICAL: contain secrets!)
*.tfstate
*.tfstate.*
*.tfstate.backup

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Django specific
django-app/venv/
django-app/staticfiles/
django-app/db.sqlite3
django-app/**/__pycache__/
django-app/**/*.pyc
django-app/**/*.pyo

# Keep example files
!django-app/db.sqlite3.example

# Google Cloud credentials (if any)
**/credentials.json
**/service-account*.json
**/*-key.json
**/*.pem
**/*.p12

# Environment files
.env
.env.local
.env.*.local
